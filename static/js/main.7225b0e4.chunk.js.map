{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","types/Enum.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setModal","id","setId","setLoader","setUserId","getClass","useCallback","todo","todoId","handleClick","userId","className","map","completed","title","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Selected","getTodos","getFilteredTodos","a","filter","catch","error","TodoFilter","setTodos","useState","selectedOption","setSelectedOption","value","setValue","getIncludesTodos","val","currTodos","includes","handleFilterChange","selectedValue","inputValue","All","Active","Completed","filteredTodos","handleInputChange","e","searchValue","target","handleSelectChange","event","onChange","placeholder","style","pointerEvents","Loader","TodoModal","loader","user","setUser","useEffect","getUser","userData","finally","handleCloseModal","getTodoById","find","href","email","name","App","modal","todosData","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7225b0e4.chunk.js","sourcesContent":["import React, { useCallback } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setModal: (value: boolean) => void,\n  id: number,\n  setId: (value: number) => void,\n  setLoader: (value: boolean) => void,\n  setUserId: (value: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setModal,\n  id,\n  setId,\n  setLoader,\n  setUserId,\n}) => {\n  const getClass = useCallback(\n    (todo: Todo, todoId: number) => {\n      if (todoId === todo.id) {\n        return 'far fa-eye-slash';\n      }\n\n      return 'far fa-eye';\n    },\n    [],\n  );\n\n  const handleClick = useCallback((todo) => {\n    setModal(true);\n    setId(todo.id);\n    setLoader(true);\n    setUserId(todo.userId);\n  }, [setModal, setId, setLoader, setUserId]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={!todo.completed\n                ? 'has-text-danger'\n                : 'has-text-success'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => handleClick(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={getClass(todo, id)} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number | undefined) => get<User>(`/users/${userId}`);\n\nexport const getFilteredTodos = async (completed: boolean): Promise<Todo[]> => {\n  return getTodos()\n    .then(todos => todos.filter(todo => todo.completed === completed))\n    .catch(error => {\n      throw error;\n    });\n};\n","export enum Selected {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React, { useState, useCallback } from 'react';\nimport { getTodos, getFilteredTodos } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Selected } from '../../types/Enum';\n\ntype Props = {\n  setTodos: (value: Todo[]) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setTodos,\n}) => {\n  const [selectedOption, setSelectedOption] = useState('all');\n  const [value, setValue] = useState('');\n\n  const getIncludesTodos = useCallback(\n    (val: string, currTodos: Todo[]) => {\n      return currTodos.filter((todo) => todo.title.includes(val));\n    },\n    [],\n  );\n\n  const handleFilterChange = useCallback(\n    async (selectedValue: string, inputValue: string) => {\n      setSelectedOption(selectedValue);\n\n      let filteredTodos;\n\n      switch (selectedValue) {\n        case Selected.All:\n          filteredTodos = await getTodos();\n          break;\n        case Selected.Active:\n          filteredTodos = await getFilteredTodos(false);\n          break;\n        case Selected.Completed:\n          filteredTodos = await getFilteredTodos(true);\n          break;\n        default:\n          filteredTodos = await getTodos();\n      }\n\n      if (inputValue) {\n        filteredTodos = getIncludesTodos(inputValue, filteredTodos);\n      }\n\n      setTodos(filteredTodos);\n    },\n    [getIncludesTodos, setTodos],\n  );\n\n  const handleInputChange = useCallback((e: React\n    .ChangeEvent<HTMLInputElement>) => {\n    const searchValue = e.target.value;\n\n    setValue(searchValue);\n    handleFilterChange(selectedOption, searchValue);\n  }, [selectedOption, handleFilterChange]);\n\n  const handleSelectChange = useCallback(async (event: React\n    .ChangeEvent<HTMLSelectElement>) => {\n    const selectedValue = event.target.value;\n\n    handleFilterChange(selectedValue, value);\n  }, [value, handleFilterChange]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedOption}\n            onChange={handleSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={value}\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable jsx-a11y/control-has-associated-label */}\n          {value && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={async () => {\n                setValue('');\n                handleFilterChange(selectedOption, '');\n              }}\n            />\n          )}\n\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\r\nimport './Loader.scss';\r\n\r\nexport const Loader: React.FC = () => (\r\n  <div className=\"Loader\" data-cy=\"loader\">\r\n    <div className=\"Loader__content\" />\r\n  </div>\r\n);\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todos: Todo[],\n  setModal: (val: boolean) => void,\n  id: number,\n  setId: (val: number) => void,\n  loader: boolean,\n  setLoader: (val: boolean) => void,\n  userId: number,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todos,\n  setModal,\n  id,\n  setId,\n  loader,\n  setLoader,\n  userId,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    setLoader(true);\n\n    getUser(userId)\n      .then((userData) => {\n        setUser(userData);\n      })\n      .catch(() => {})\n      .finally(() => setLoader(false));\n  }, [setLoader, userId]);\n\n  const handleCloseModal = useCallback(() => {\n    setModal(false);\n    setId(0);\n  }, [setModal, setId]);\n\n  const getTodoById = useCallback((todoId: number) => {\n    return todos.find(todo => todo.id === todoId);\n  }, [todos]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loader ? <Loader /> : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {getTodoById(id)?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {getTodoById(id)?.completed === false ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loader, setLoader] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [id, setId] = useState(0);\n  const [userId, setUserId] = useState(0);\n\n  useEffect(() => {\n    setLoader(true);\n\n    getTodos()\n      .then((todosData) => {\n        setTodos(todosData);\n      })\n      .catch(() => {})\n      .finally(() => setLoader(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setTodos={setTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loader && !modal && <Loader />}\n              {!loader && todos.length > 0 && (\n                <TodoList\n                  todos={todos}\n                  setModal={setModal}\n                  id={id}\n                  setId={setId}\n                  setLoader={setLoader}\n                  setUserId={setUserId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {modal && (\n        <TodoModal\n          todos={todos}\n          setModal={setModal}\n          id={id}\n          setId={setId}\n          loader={loader}\n          setLoader={setLoader}\n          userId={userId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}